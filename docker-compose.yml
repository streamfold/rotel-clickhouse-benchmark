networks:
  streamfold:
    driver: bridge

#volumes:

services:
  kafka:
    image: apache/kafka:4.1.0
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: "1"
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${KAFKA_HOST_IP:-kafka-1.kafka-svc.kafka.svc.cluster.local}:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 12
      KAFKA_MESSAGE_MAX_BYTES: 5242880
    volumes:
      - /kafka/data:/data
    healthcheck:
      test: bash -c '(echo > /dev/tcp/127.0.0.1/9092) >/dev/null 2>&1'
      interval: 10s
      retries: 10
    # extra_hosts:
    #   - "kafka-1.kafka-svc.kafka.svc.cluster.local:${KAFKA_HOST_IP:-127.0.0.1}"
    networks:
      - streamfold

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./config/otel-collector/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    command:
      - "--config=/etc/otelcol-contrib/config.yaml"
    #      - "--feature-gates=clickhouse.json"
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    networks:
      - streamfold
    extra_hosts:
      - "host.docker.internal:host-gateway"

  hyper-dx:
    image: docker.hyperdx.io/hyperdx/hyperdx-local
    environment:
      CLICKHOUSE_ENDPOINT: "http://clickhouse:8123"
      CLICKHOUSE_USER: "default"
      CLICKHOUSE_PASSWORD: "${CLICKHOUSE_PASSWORD:-}"
    ports:
      - 8080:8080
    networks:
      - streamfold

  clickhouse:
    image: "clickhouse/clickhouse-server:${CHVER:-latest}"
    user: "101:101"
    hostname: clickhouse
    networks:
      - streamfold
    volumes:
      - ./config/clickhouse-server/config.xml:/etc/clickhouse-server/config.d/config.xml
      - ./config/clickhouse-server/users.xml:/etc/clickhouse-server/users.d/users.xml
      - ./scripts/clickhouse-server/init-otel-db.sh:/docker-entrypoint-initdb.d/init-otel-db.sh
      - /clickhouse/lib:/var/lib/clickhouse
      - /clickhouse/log:/var/log/clickhouse-server
    ports:
      - "8123:8123"
      - "9000:9000"
    depends_on:
      - clickhouse-keeper

  clickhouse-keeper:
    image: "clickhouse/clickhouse-keeper:${CHKVER:-latest-alpine}"
    user: "101:101"
    hostname: clickhouse-keeper
    networks:
      - streamfold
    volumes:
      - ./config/clickhouse-keeper/keeper_config.xml:/etc/clickhouse-keeper/keeper_config.xml
    ports:
      - "127.0.0.1:9181:9181"

  telemetrygen:
    build:
      context: ./telemetrygen
    networks:
      - streamfold

  clickhouse-ddl:
    image: streamfold/rotel-clickhouse-ddl
    networks:
      - streamfold

  rotel-gateway:
    image: streamfold/rotel
    networks:
      - streamfold
    command:
      - "--exporter=clickhouse"
      - "--clickhouse-exporter-endpoint=http://${CLICKHOUSE_HOST:-clickhouse}:8123"
      - "--clickhouse-exporter-enable-json"
      - "--receiver=kafka"
      - "--kafka-receiver-brokers=${KAFKA_HOST:-kafka}:9092"
      - "--kafka-receiver-traces"
      - "--kafka-receiver-logs"

  rotel-edge:
    image: streamfold/rotel
    ports:
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
    networks:
      - streamfold
    command:
      - "--exporter=kafka"
      - "--kafka-exporter-brokers=${KAFKA_HOST:-kafka}:9092"
      - "--kafka-exporter-partitioner=murmur2-random"
      - "--kafka-exporter-max-message-bytes=5242880"

  otel-coll-gateway:
    image: otel/opentelemetry-collector-contrib
    environment:
      KAFKA_HOST: "${KAFKA_HOST:-localhost}"
      CLICKHOUSE_HOST: "${CLICKHOUSE_HOST:-localhost}"
    volumes:
      - ./config/otel-coll-gateway/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    command:
      - "--config=/etc/otelcol-contrib/config.yaml"
      - "--feature-gates=clickhouse.json"
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    networks:
      - streamfold

  otel-coll-edge:
    image: otel/opentelemetry-collector-contrib
    environment:
      KAFKA_HOST: "${KAFKA_HOST:-localhost}"
    volumes:
      - ./config/otel-coll-edge/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml
    command:
      - "--config=/etc/otelcol-contrib/config.yaml"
      - "--feature-gates=clickhouse.json"
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    networks:
      - streamfold
